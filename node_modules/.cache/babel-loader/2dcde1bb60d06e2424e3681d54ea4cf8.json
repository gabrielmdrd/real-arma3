{"remainingRequest":"C:\\UwAmp\\www\\real-arma3\\node_modules\\babel-loader\\lib\\index.js!C:\\UwAmp\\www\\real-arma3\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\UwAmp\\www\\real-arma3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\UwAmp\\www\\real-arma3\\src\\components\\pages\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\UwAmp\\www\\real-arma3\\src\\components\\pages\\login.vue","mtime":1542278500933},{"path":"C:\\UwAmp\\www\\real-arma3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539850667578},{"path":"C:\\UwAmp\\www\\real-arma3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\UwAmp\\www\\real-arma3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539850667578},{"path":"C:\\UwAmp\\www\\real-arma3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from '../../../node_modules/axios';\nimport { navBar } from \"../../store\";\nexport default {\n  name: \"login\",\n  beforeCreate: function beforeCreate() {\n    if (this.$session.exists()) {\n      this.$router.push('/adminPanel');\n    }\n  },\n  data: function data() {\n    return {\n      showDismissibleAlert: false,\n      logged: \"\",\n      input: {\n        login: \"\",\n        pwd: \"\"\n      }\n    };\n  },\n  methods: {\n    auth: function auth() {\n      var _this = this;\n\n      if (this.input.login === \"\" || this.input.pwd === \"\") {\n        this.showDismissibleAlert = true;\n      } else {\n        axios.post(\"http://localhost:3000/auth\", {\n          body: this.input\n        }).then(function (response) {\n          _this.logged = response.data;\n\n          if (response.data == 1) {\n            _this.$session.set('login', _this.input.login);\n\n            for (var i = 0; i < navBar.navData.length; i++) {\n              if (navBar.navData[i].page === \"Connexion\") {\n                navBar.navData.splice(i, 1);\n                navBar.navData.push({\n                  page: \"Deconnexion\",\n                  page_url: '/logout'\n                });\n              }\n            }\n\n            _this.$router.push('/home');\n          } else if (response.data == 2) {\n            _this.$session.set('login', _this.input.login);\n\n            _this.$session.set('admin', 1);\n\n            for (var _i = 0; _i < navBar.navData.length; _i++) {\n              if (navBar.navData[_i].page === \"Connexion\") {\n                navBar.navData.splice(_i, 3);\n                navBar.navData.push({\n                  page: \"Deconnexion\",\n                  page_url: '/logout'\n                }, {\n                  page: \"Administration\",\n                  page_url: '/login'\n                });\n              }\n            }\n\n            _this.$router.push('/adminPanel');\n          } else {\n            _this.showDismissibleAlert = true;\n          }\n        }).catch(function (e) {\n          _this.errors.push(e);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,KAAA,MAAA,6BAAA;AACA,SAAA,MAAA,QAAA,aAAA;AAEA,eAAA;AAEA,QAAA,OAFA;AAGA,gBAAA,wBAAA;AACA,QAAA,KAAA,QAAA,CAAA,MAAA,EAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA;AACA,GAPA;AAQA,MARA,kBAQA;AACA,WAAA;AACA,4BAAA,KADA;AAEA,cAAA,EAFA;AAGA,aAAA;AACA,eAAA,EADA;AAEA,aAAA;AAFA;AAHA,KAAA;AAQA,GAjBA;AAkBA,WAAA;AACA,QADA,kBAEA;AAAA;;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,KAAA,EAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,EAAA,EACA;AACA,aAAA,oBAAA,GAAA,IAAA;AACA,OAHA,MAKA;AACA,cAAA,IAAA,+BAAA;AACA,gBAAA,KAAA;AADA,SAAA,EAGA,IAHA,CAGA,oBAAA;AACA,gBAAA,MAAA,GAAA,SAAA,IAAA;;AACA,cAAA,SAAA,IAAA,IAAA,CAAA,EACA;AACA,kBAAA,QAAA,CAAA,GAAA,CAAA,OAAA,EAAA,MAAA,KAAA,CAAA,KAAA;;AACA,iBAAA,IAAA,IAAA,CAAA,EAAA,IAAA,OAAA,OAAA,CAAA,MAAA,EAAA,GAAA,EACA;AACA,kBAAA,OAAA,OAAA,CAAA,CAAA,EAAA,IAAA,KAAA,WAAA,EACA;AACA,uBAAA,OAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,uBAAA,OAAA,CAAA,IAAA,CAAA;AACA,wBAAA,aADA;AAEA,4BAAA;AAFA,iBAAA;AAIA;AACA;;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AAEA,WAhBA,MAiBA,IAAA,SAAA,IAAA,IAAA,CAAA,EACA;AACA,kBAAA,QAAA,CAAA,GAAA,CAAA,OAAA,EAAA,MAAA,KAAA,CAAA,KAAA;;AACA,kBAAA,QAAA,CAAA,GAAA,CAAA,OAAA,EAAA,CAAA;;AACA,iBAAA,IAAA,KAAA,CAAA,EAAA,KAAA,OAAA,OAAA,CAAA,MAAA,EAAA,IAAA,EACA;AACA,kBAAA,OAAA,OAAA,CAAA,EAAA,EAAA,IAAA,KAAA,WAAA,EACA;AACA,uBAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA,uBAAA,OAAA,CAAA,IAAA,CAAA;AACA,wBAAA,aADA;AAEA,4BAAA;AAFA,iBAAA,EAGA;AACA,wBAAA,gBADA;AAEA,4BAAA;AAFA,iBAHA;AAOA;AACA;;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA,WAnBA,MAqBA;AACA,kBAAA,oBAAA,GAAA,IAAA;AACA;AAEA,SA/CA,EAgDA,KAhDA,CAgDA,aAAA;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAlDA;AAmDA;AACA;AA7DA;AAlBA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <b-form @submit.prevent=\"auth\">\r\n            <b-form-group>\r\n                <label>Login</label>\r\n                <b-form-input id=\"login\"\r\n                              type=\"text\"\r\n                              v-model=\"input.login\"/>\r\n                <label>Mot de passe</label>\r\n                <b-form-input id=\"pwd\"\r\n                              type=\"password\"\r\n                              v-model=\"input.pwd\"\r\n                              placeholder=\"Enter email\"/>\r\n                <b-btn type=\"submit\" variant=\"primary\">Connexion</b-btn>\r\n            </b-form-group>\r\n        </b-form>\r\n        <b-alert variant=\"danger\" :show=\"showDismissibleAlert\">les champs sont vides</b-alert>\r\n        <p>{{ input.log }}</p>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import axios from '../../../node_modules/axios'\r\n    import {navBar} from \"../../store\";\r\n\r\n    export default {\r\n\r\n        name: \"login\",\r\n        beforeCreate: function () {\r\n            if (this.$session.exists()) {\r\n                this.$router.push('/adminPanel')\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                showDismissibleAlert: false,\r\n                logged: \"\",\r\n                input: {\r\n                    login: \"\",\r\n                    pwd:  \"\"\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            auth()\r\n            {\r\n                if(this.input.login === \"\" || this.input.pwd === \"\")\r\n                {\r\n                    this.showDismissibleAlert = true\r\n                }\r\n                else\r\n                {\r\n                    axios.post(`http://localhost:3000/auth`, {\r\n                        body: this.input\r\n                    })\r\n                        .then(response => {\r\n                            this.logged = response.data;\r\n                            if( response.data == 1)\r\n                            {\r\n                                this.$session.set('login', this.input.login);\r\n                                for(let i = 0;i < navBar.navData.length;i++)\r\n                                {\r\n                                    if(navBar.navData[i].page === \"Connexion\")\r\n                                    {\r\n                                        navBar.navData.splice(i,1);\r\n                                        navBar.navData.push({\r\n                                            page: \"Deconnexion\",\r\n                                            page_url: '/logout'\r\n                                        });\r\n                                    }\r\n                                }\r\n                                this.$router.push('/home');\r\n\r\n                            }\r\n                            else if(response.data == 2)\r\n                            {\r\n                                this.$session.set('login', this.input.login);\r\n                                this.$session.set('admin', 1);\r\n                                for(let i = 0;i < navBar.navData.length;i++)\r\n                                {\r\n                                    if(navBar.navData[i].page === \"Connexion\")\r\n                                    {\r\n                                        navBar.navData.splice(i,3);\r\n                                        navBar.navData.push({\r\n                                            page: \"Deconnexion\",\r\n                                            page_url: '/logout'\r\n                                        }, {\r\n                                                page: \"Administration\",\r\n                                                page_url: '/login'\r\n                                        });\r\n                                    }\r\n                                }\r\n                                this.$router.push('/adminPanel');\r\n                            }\r\n                            else\r\n                            {\r\n                                this.showDismissibleAlert = true\r\n                            }\r\n\r\n                        })\r\n                        .catch(e => {\r\n                            this.errors.push(e)\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\np{\r\n    color: black;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\pages"}]}